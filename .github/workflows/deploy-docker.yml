name: build-docker
permissions:
  contents: read

on:
  workflow_call:
    inputs:
      deploy:
        type: boolean
        required: true
      release:
        type: boolean
        required: true
      version:
        type: string
        required: true

jobs:
  build:
    environment: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        variant: [standard, aws-cli]
    steps:
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0

        with:
          images: |
            zoomvideo/zoom-data-fence
          tags: |
            type=raw,value=latest,enable=${{ inputs.release && matrix.variant == 'standard' }}
            type=raw,value=v${{ inputs.version }},enable=${{ matrix.variant == 'standard' }}
            type=raw,value=v${{ inputs.version }}-${{ matrix.variant }},enable=${{ matrix.variant == 'aws-cli' }}
            type=raw,value=${{ matrix.variant }},enable=${{ matrix.variant == 'aws-cli' }}
      - name: Login to Docker Hub
        if: ${{ inputs.deploy }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #v3.4.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ inputs.deploy}}
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            INSTALL_AWS_CLI=${{ matrix.variant == 'aws-cli' }}
      - name: Update repo description
        uses: peter-evans/dockerhub-description@432a30c9e07499fd01da9f8a49f0faf9e0ca5b77 # v4.0.2
        if: ${{ inputs.deploy && matrix.variant == 'standard' }}
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: zoomvideo/zoom-data-fence
          short-description: ${{ github.event.repository.description }}

